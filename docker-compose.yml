version: '3'

services:
  app:
    image: spitai/nodejs-rs-rest
    container_name: nodejs-rs-rest
    restart: always
    build: .
    ports:
      - '${PORT}:${PORT}'
    volumes:
      - ./src:/usr/app/src
      - './${LOGS_DIRNAME}:/usr/app/${LOGS_DIRNAME}'
    depends_on:
      - db
    networks:
      - backend
    environment:
      PORT: ${PORT}
      LOGS_DIRNAME: ${LOGS_DIRNAME}
      POSTGRES_HOST: ${PG_SERVICE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
  db:
    image: spitai/postgres
    container_name: ${PG_SERVICE}
    restart: always
    build:
      context: .
      dockerfile: DB.Dockerfile
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./db_logs:/logs:z
    command: postgres -c logging_collector=on -c log_directory=/logs
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - backend

networks:
  backend:
    driver: bridge
